## #####
## Générateur java de la couche service IMC
## Création de l'interface de service généré et non modifiable
##
## @param generatedObject l'objet prstm
##
## @author Pinson Pierre-Marie
## @version 1.0.0 09/10/2009
## #####
##
##  -------------------------
##  Chargement de variables
##  -------------------------
##
## on récup le pobject
#set ( $obmObject = ${generatedObject.datamObject.obmObject} )
#set ( $mElementHomeGenerated = ${manager.getElement("{0}:{1}.S{2}Generated", ${obmObject.modelId})} )
#set ( $pElement = ${manager.getElement("{0}:{1}.{2}Bean", ${obmObject.modelId})} )
#set ( $pElementHome = ${manager.getElement("{0}:{1}.PHome{2}", ${obmObject.modelId})} )
##
## si le nombre d'id de la classe est différent de 1 alors on aura une clé composé
#if ( ${obmObject.fieldId.class.simpleName} == "ComposedId" )
##
#set ( $cleType = ${manager.getElement("{0}:{1}.PK{2}", ${obmObject.modelId})} )
#else
#if ( ${manager.isBaseType(${obmObject.fieldId.type})} == true )
#set ( $cleType = ${manager.getElement(${obmObject.fieldId.type})} )
#else
#set ( $cleType = ${manager.getElement("{0}:{1}.{2}Bean", ${obmObject.fieldId.type})} )
#end
#end
##
## -------------------------
## Le template
## -------------------------
##
package ${mElementHomeGenerated.packageName};

/**
 * Interface de service généré de l'objet ${obmObject.completeName}
 *
 * @version ${model.version}
 * @author généré par ${infoGen}
 */
public interface ${mElementHomeGenerated.className}
        extends ${manager.getElement("ServiceCrud").path}<
            ${pElement.path}, ${cleType.path}> {
	
	/**
	 * propriété du nom du service
	 */
	String SERVICE_NAME = "${obmObject.name}";
    
#generate ("CoucheService:ServiceGenerated_Orders")    
    
#generate ("CoucheService:ServiceGenerated_GetByRef")    
}